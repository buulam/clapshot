# Nginx configuration file for serving Clapshot with HTTP basic
# auth and soster/htadmin for user management
#
# Copy this to /etc/nginx/sites-available/clapshot and customize.

server {

	listen 80 default_server;
	listen [::]:80 default_server;

	server_name clapshot.example.com;

	# Clapshot paths
	location / {
		root /var/www/clapshot-client;
		index index.html;
		try_files $uri $uri/ =404;

		# Use HTTP basic auth, this can be edited by
		# htadmin (see below)
		auth_basic "Clapshot login";
		auth_basic_user_file /var/www/.htpasswd;
		proxy_set_header X-Remote-User-Id $remote_user;
		proxy_set_header X-Remote-User-Name $remote_user;


		location /videos {
				alias /mnt/clapshot-data/data/videos;
		}

		# API (clapshot-server)
		location /api {
			proxy_pass http://127.0.0.1:8095/api;

			# Also pass along websocket
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "Upgrade";
			proxy_set_header Host $host;
			proxy_read_timeout 2h;
			proxy_send_timeout 2h;

			# Pass authenticated username to backend
			proxy_set_header X-Remote-User-Id $remote_user;
			proxy_set_header X-Remote-User-Name $remote_user;

			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

			# Allow large uploads
			# (TODO: maybe limit to /api/upload ?)
			client_body_buffer_size		256K;
			client_max_body_size		50G;
			proxy_request_buffering		off;
		}

		# Expire static files after 4 hours to avoid stale frontend after version upgrades
		location ~* \.(html|json|conf|js|css)$ {
				expires 4h;
				add_header Cache-Control "public, no-transform";
		}
	}

	location /api/health {
		proxy_pass http://127.0.0.1:8095/api/health;  # Skip auth for health check
	}

	# Htadmin for user management
	location /htadmin {
			index index.php;
			root /var/www;

		location ~ \.php$ {
			include snippets/fastcgi-php.conf;
			fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
		}
	}
	location /htadmin/config {
			deny  all;
	}
	location /logout {
		# 401 to force re-authentication
		return 401;
	}
}
